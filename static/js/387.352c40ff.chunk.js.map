{"version":3,"file":"static/js/387.352c40ff.chunk.js","mappings":"sOAEaA,E,OAAOC,GAAAA,GAAH,oE,SC2CjB,EAtCa,WACX,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAOA,IANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAYN,GAAIO,MAAK,SAAAC,GACnB,OAAOJ,EAAYI,EAAKC,KACzB,GACF,GAAE,CAACT,IAECG,EAML,OACE,0BACE,SAACL,EAAD,UACGK,EAASO,KAAI,SAAAC,GAAU,OACtB,2BACE,gBACEC,IACGD,EAAWE,aAAZ,UAzBC,oCAyBD,OAEkBF,EAAWE,cA1B1B,2EA4BLC,IAAKH,EAAWI,KAChBC,MAAM,SAER,oCAAYL,EAAWI,SACvB,uBAAIJ,EAAWM,cAXRN,EAAWX,GADE,OAkB/B,C,uJC3CD,IAAMkB,EAAW,+BACXC,EAAU,mCAEHC,EAAkB,WAC7B,OAAOC,MAAM,GAAD,OAAIH,EAAJ,uCAA2CC,EAA3C,YAA6DZ,MACvE,SAAAe,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GAEJ,EAEYC,EAAc,SAAA3B,GACzB,OAAOqB,MAAM,GAAD,OACPH,EADO,kBACWlB,EADX,oBACyBmB,EADzB,oBAEVZ,MAAK,SAAAe,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,EAEYpB,EAAc,SAAAN,GACzB,OAAOqB,MAAM,GAAD,OACPH,EADO,kBACWlB,EADX,4BACiCmB,EADjC,oBAEVZ,MAAK,SAAAe,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,EAEYE,EAAkB,SAAA5B,GAC7B,OAAOqB,MAAM,GAAD,OACPH,EADO,kBACWlB,EADX,4BACiCmB,EADjC,2BAEVZ,MAAK,SAAAe,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,EAEYG,EAAiB,SAAAC,GAC5B,OAAOT,MAAM,GAAD,OACPH,EADO,iCAC0BC,EAD1B,kBAC2CW,EAD3C,+CAEVvB,MAAK,SAAAe,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","service/reqestApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\nlist-style: none;\npadding: 0;\nmargin: 0;\n`;\n","import { useParams } from 'react-router-dom';\nimport { getFilmCast } from 'service/reqestApi';\nimport { useState, useEffect } from 'react';\nimport { List } from './Cast.styled';\nconst BASE_IMG = 'https://image.tmdb.org/t/p/w500/';\nconst ANONIM_IMG = 'https://upload.wikimedia.org/wikipedia/commons/7/72/Default-welcomer.png'\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [filmCast, setfilmCast] = useState([]);\n  useEffect(() => {\n    getFilmCast(id).then(data => {\n      return setfilmCast(data.cast);\n    });\n  }, [id]);\n\n  if (!filmCast) {\n    return;\n  }\n\n  // console.log(filmCast);\n\n  return (\n    <div>\n      <List>\n        {filmCast.map(filmActior => (\n          <li key={filmActior.id}>\n            <img\n              src={\n                !filmActior.profile_path\n                  ? ANONIM_IMG\n                  : `${BASE_IMG}${filmActior.profile_path}`\n              }\n              alt={filmActior.name}\n              width=\"150\"\n            />\n            <p>Author: {filmActior.name}</p>\n            <p>{filmActior.character}</p>\n          </li>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default Cast;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9739146968645f4ae720d1253291b334';\n\nexport const getPopularFilms = () => {\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=1`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n};\n\nexport const getFilmByID = id => {\n  return fetch(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const getFilmCast = id => {\n  return fetch(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const getFilmReviewes = id => {\n  return fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const getFilmByQuery = query => {\n  return fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n"],"names":["List","styled","id","useParams","useState","filmCast","setfilmCast","useEffect","getFilmCast","then","data","cast","map","filmActior","src","profile_path","alt","name","width","character","BASE_URL","API_KEY","getPopularFilms","fetch","response","ok","Error","status","json","getFilmByID","getFilmReviewes","getFilmByQuery","query"],"sourceRoot":""}