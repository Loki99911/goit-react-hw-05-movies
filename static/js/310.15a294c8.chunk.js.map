{"version":3,"file":"static/js/310.15a294c8.chunk.js","mappings":"qQAGaA,EAAYC,EAAAA,GAAAA,IAAH,oFAMTC,EAAOD,EAAAA,GAAAA,GAAH,oEAMJE,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,6NAcJI,EAAOJ,EAAAA,GAAAA,GAAH,wFAMJK,EAAML,EAAAA,GAAAA,IAAH,+CAIHM,EAAON,EAAAA,GAAAA,EAAH,8HASJO,EAAQP,EAAAA,GAAAA,MAAH,kKAQLQ,EAAMR,EAAAA,GAAAA,OAAH,qJ,SCehB,EAhEe,WACb,OAAwCS,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAC/B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAkBjB,IATAC,EAAAA,EAAAA,YAAU,WACHP,IAGLQ,EAAAA,EAAAA,IAAeR,GAAOS,MAAK,SAAAC,GACzB,OAAON,EAASM,EAAKC,QACtB,GACF,GAAE,CAACX,IAECG,EAIL,OACE,UAAChB,EAAD,YACE,kBAAMyB,SAvBW,SAAAC,GACnBA,EAAMC,iBACoC,KAAtCD,EAAME,OAAOC,SAAShB,MAAMiB,OAG9BlB,EAAgB,CAAEC,MAAOa,EAAME,OAAOC,SAAShB,MAAMiB,OACxD,EAiBG,WACE,SAACtB,EAAD,CACEuB,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZC,KAAK,WAEP,SAAC1B,EAAD,CAAKsB,KAAK,SAAV,UACE,0CAGc,IAAjBf,EAAMoB,SACL,SAAClC,EAAD,UACGc,EAAMqB,KAAI,SAAAC,GAAI,OACb,SAACjC,EAAD,WACE,UAACF,EAAD,CACEoC,GAAE,kBAAaD,EAAKE,IACpBC,MAAO,CAAEC,KAAMxB,GACfyB,MAAO,CAAEC,QAAS,QAHpB,WAKE,SAACtC,EAAD,CACEuC,IAAG,UApDJ,oCAoDI,OAAgBP,EAAKQ,aACxBC,IAAKT,EAAKU,eACVC,MAAM,QAER,SAAC1C,EAAD,UAAO+B,EAAKU,qBAXLV,EAAKE,GADH,QAoBxB,C,uJCrED,IAAMU,EAAW,+BACXC,EAAU,mCAEHC,EAAkB,WAC7B,OAAOC,MAAM,GAAD,OAAIH,EAAJ,uCAA2CC,EAA3C,YAA6D7B,MACvE,SAAAgC,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GAEJ,EAEYC,EAAc,SAAAnB,GACzB,OAAOa,MAAM,GAAD,OACPH,EADO,kBACWV,EADX,oBACyBW,EADzB,oBAEV7B,MAAK,SAAAgC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,EAEYE,EAAc,SAAApB,GACzB,OAAOa,MAAM,GAAD,OACPH,EADO,kBACWV,EADX,4BACiCW,EADjC,oBAEV7B,MAAK,SAAAgC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,EAEYG,EAAkB,SAAArB,GAC7B,OAAOa,MAAM,GAAD,OACPH,EADO,kBACWV,EADX,4BACiCW,EADjC,2BAEV7B,MAAK,SAAAgC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,EAEYrC,EAAiB,SAAAR,GAC5B,OAAOwC,MAAM,GAAD,OACPH,EADO,iCAC0BC,EAD1B,kBAC2CtC,EAD3C,+CAEVS,MAAK,SAAAgC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,C","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","service/reqestApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n\nexport const List = styled.ul`\nlist-style: none;\npadding: 0;\nmargin: 0;\n`;\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  padding: 8px 0px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: white;\n    background-color: violet;\n  }\n`;\n\nexport const Item = styled.li`\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n`;\n\nexport const Img = styled.img`\n  margin-right: 20px;\n`;\n\nexport const Text = styled.p`\n  margin-top: auto;\n  margin-bottom: auto;\n  color: inherit;\n  &:hover {\n    color: violet;\n  }\n`;\n\nexport const Input = styled.input`\n  height: 40px;\n  margin-right: 20px;\n  border: 1px solid black;\n  border-top-left-radius: 10px;\n  border-bottom-right-radius: 10px;\n`;\n\nexport const Btn = styled.button`\n  background-color: violet;\n  border-radius: 10px;\n  height: 40px;\n  border: none;\n  font-weight: 500;\n  color: white;\n`;\n\n","import { useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getFilmByQuery } from 'service/reqestApi';\nimport { Container, List, Link, Item, Img, Text, Input, Btn } from './Movies.styled';\n\nconst BASE_IMG = 'https://image.tmdb.org/t/p/w500/';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const [films, setFilms] = useState([]);\n  const location = useLocation();\n  const onFormSubmit = event => {\n    event.preventDefault();\n    if (event.target.elements.query.value === \"\") {\n      return;\n    }\n      setSearchParams({ query: event.target.elements.query.value });\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    getFilmByQuery(query).then(data => {\n      return setFilms(data.results);\n    });\n  }, [query]);\n\n  if (!films) {\n    return;\n  }\n\n  return (\n    <Container>\n      <form onSubmit={onFormSubmit}>\n        <Input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search films\"\n          name=\"query\"\n        />\n        <Btn type=\"submit\">\n          <span>Search</span>\n        </Btn>\n      </form>\n      {films.length !== 0 && (\n        <List>\n          {films.map(film => (\n            <Item key={film.id}>\n              <Link\n                to={`/movies/${film.id}`}\n                state={{ from: location }}\n                style={{ display: 'flex' }}\n              >\n                <Img\n                  src={`${BASE_IMG}${film.poster_path}`}\n                  alt={film.original_title}\n                  width=\"50\"\n                />\n                <Text>{film.original_title}</Text>\n              </Link>\n            </Item>\n          ))}\n        </List>\n      )}\n    </Container>\n  );\n};\n\nexport default Movies;","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9739146968645f4ae720d1253291b334';\n\nexport const getPopularFilms = () => {\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=1`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n};\n\nexport const getFilmByID = id => {\n  return fetch(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const getFilmCast = id => {\n  return fetch(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const getFilmReviewes = id => {\n  return fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const getFilmByQuery = query => {\n  return fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n"],"names":["Container","styled","List","Link","NavLink","Item","Img","Text","Input","Btn","useSearchParams","searchParams","setSearchParams","query","get","useState","films","setFilms","location","useLocation","useEffect","getFilmByQuery","then","data","results","onSubmit","event","preventDefault","target","elements","value","type","autoComplete","autoFocus","placeholder","name","length","map","film","to","id","state","from","style","display","src","poster_path","alt","original_title","width","BASE_URL","API_KEY","getPopularFilms","fetch","response","ok","Error","status","json","getFilmByID","getFilmCast","getFilmReviewes"],"sourceRoot":""}