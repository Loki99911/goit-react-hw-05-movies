{"version":3,"file":"static/js/168.f30bfaf5.chunk.js","mappings":"sOAEaA,E,OAAOC,GAAAA,GAAH,oE,SCkCjB,EAhCiB,WACf,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAOA,IANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GAAIO,MAAK,SAAAC,GACvB,OAAOJ,EAAgBI,EAAKC,QAC7B,GACF,GAAE,CAACT,IAECG,EAKL,OADAO,QAAQC,IAAIR,IAEV,yBAC2B,IAAxBA,EAAaS,QACZ,uEAEA,SAACd,EAAD,UACGK,EAAaU,KAAI,SAAAC,GAAU,OAC1B,2BACE,qCAAaA,EAAWC,WACxB,uBAAID,EAAWE,YAFRF,EAAWd,GADM,OAUrC,C,uJClCD,IAAMiB,EAAW,+BACXC,EAAU,mCAEHC,EAAkB,WAC7B,OAAOC,MAAM,GAAD,OAAIH,EAAJ,uCAA2CC,EAA3C,YAA6DX,MACvE,SAAAc,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GAEJ,EAEYC,EAAc,SAAC1B,GAC1B,OAAOoB,MAAM,GAAD,OACPH,EADO,kBACWjB,EADX,oBACyBkB,EADzB,oBACmDX,MAAK,SAAAc,GAClE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,EAEYE,EAAc,SAAC3B,GAC1B,OAAOoB,MAAM,GAAD,OACPH,EADO,kBACWjB,EADX,4BACiCkB,EADjC,oBAC2DX,MAAK,SAAAc,GAC1E,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,EAEYnB,EAAkB,SAAAN,GAC7B,OAAOoB,MAAM,GAAD,OACPH,EADO,kBACWjB,EADX,4BACiCkB,EADjC,2BAEVX,MAAK,SAAAc,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,EAEYG,EAAiB,SAAAC,GAC5B,OAAOT,MAAM,GAAD,OACPH,EADO,iCAC0BC,EAD1B,kBAC2CW,EAD3C,+CAEVtB,MAAK,SAAAc,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,C","sources":["components/Reviewes/Reviewes.styled.js","components/Reviewes/Reviewes.jsx","service/reqestApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\nlist-style: none;\npadding: 0;\nmargin: 0;\n`;\n","import { useParams } from 'react-router-dom';\nimport { getFilmReviewes } from 'service/reqestApi';\nimport { useState, useEffect } from 'react';\nimport { List } from './Reviewes.styled';\nconst Reviewes = () => {\n  const { id } = useParams();\n  const [filmReviewes, setfilmReviewes] = useState([]);\n  useEffect(() => {\n    getFilmReviewes(id).then(data => {\n      return setfilmReviewes(data.results);\n    });\n  }, [id]);\n\n  if (!filmReviewes) {\n    return;\n  }\n\n  console.log(filmReviewes);\n  return (\n    <div>\n      {filmReviewes.length === 0 ? (\n        <p>We don`t have any reviewes for this movie.</p>\n      ) : (\n        <List>\n          {filmReviewes.map(filmReview => (\n            <li key={filmReview.id}>\n              <h3>Author: {filmReview.author}</h3>\n              <p>{filmReview.content}</p>\n            </li>\n          ))}\n        </List>\n      )}\n    </div>\n  );\n};\n\nexport default Reviewes;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9739146968645f4ae720d1253291b334';\n\nexport const getPopularFilms = () => {\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=1`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n};\n\nexport const getFilmByID = (id) => {\n  return fetch(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const getFilmCast = (id) => {\n  return fetch(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const getFilmReviewes = id => {\n  return fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\nexport const getFilmByQuery = query => {\n  return fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n};\n\n\n\n\n"],"names":["List","styled","id","useParams","useState","filmReviewes","setfilmReviewes","useEffect","getFilmReviewes","then","data","results","console","log","length","map","filmReview","author","content","BASE_URL","API_KEY","getPopularFilms","fetch","response","ok","Error","status","json","getFilmByID","getFilmCast","getFilmByQuery","query"],"sourceRoot":""}